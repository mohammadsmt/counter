{"version":3,"sources":["logo.svg","components/Counter.jsx","App.js","reportWebVitals.js","index.js"],"names":["Counter","props","onincrementHandler","incrementHandler","ondecrementHandler","state","counter","setState","isFinished","decrementHandler","this","className","Fragment","displayBtn","onClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAAe,I,0CCqEAA,E,kDAjEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IA+BVC,mBAAqB,WACjB,EAAKC,oBAjCY,EAmCrBC,mBAAqB,WACU,IAAvB,EAAKC,MAAMC,SACX,EAAKC,SAAS,CACVC,YAAa,IAGrB,EAAKC,oBAvCL,EAAKJ,MAAQ,CACXC,QAASL,EAAMK,QACfE,YAAY,GAJG,E,oDAsBrB,WACIE,KAAKH,SAAS,CACVD,QAASI,KAAKL,MAAMC,QAAU,M,8BAGtC,WACII,KAAKH,SAAS,CACVD,QAASI,KAAKL,MAAMC,QAAU,M,oBAgBpC,WACE,OACE,sBAAKK,UAAU,UAAf,WACID,KAAKL,MAAMG,YACX,eAAC,IAAMI,SAAP,WACE,qBAAKD,UAAU,cAAf,SAA8BD,KAAKL,MAAMC,WACd,IAA1BI,KAAKT,MAAMY,YACV,sBAAKF,UAAU,wBAAf,UACE,qBAAKA,UAAU,cAAcG,QAASJ,KAAKR,mBAA3C,eACA,qBAAKS,UAAU,cAAcG,QAASJ,KAAKN,mBAA3C,qBAKPM,KAAKL,MAAMG,YAAc,8BAAK,kD,GA5DjBO,a,MCSPC,MARf,WACE,OACE,qBAAKL,UAAU,MAAf,SACE,cAAC,EAAD,CAASL,QAAS,GAAIO,YAAY,OCKzBI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.15373b8f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\r\nimport \"./Counter.css\";\r\n\r\nclass Counter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      counter: props.counter,\r\n      isFinished: false,\r\n    };\r\n    // this.onincrementHandler = this.onincrementHandler.bind(this);\r\n    // this.ondecrementHandler = this.ondecrementHandler.bind(this);\r\n    // this.counterIntervalHandler = setInterval(this.updateCounter, 1000);\r\n  }\r\n//   updateCounter = () => {\r\n//     if (this.state.counter == 0) {\r\n//       clearInterval(this.counterIntervalHandler);\r\n//       this.setState({\r\n//         isFinished: true,\r\n//       });\r\n//       return;\r\n//     }\r\n//     this.setState({\r\n//       counter: this.state.counter - 1,\r\n//     });\r\n//   };\r\nincrementHandler() {\r\n    this.setState({\r\n        counter: this.state.counter + 1\r\n    });\r\n}\r\ndecrementHandler() {\r\n    this.setState({\r\n        counter: this.state.counter - 1\r\n    });\r\n}\r\nonincrementHandler = () => {\r\n    this.incrementHandler();\r\n}\r\nondecrementHandler = () => {\r\n    if (this.state.counter === 0) {\r\n        this.setState({\r\n            isFinished : true\r\n        })\r\n    }\r\n    this.decrementHandler();\r\n}\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"counter\">\r\n        {!this.state.isFinished && (\r\n          <React.Fragment>\r\n            <div className=\"counter-num\">{this.state.counter}</div>\r\n            {this.props.displayBtn === true && (\r\n              <div className=\"counter-btn-container\">\r\n                <div className=\"counter-btn\" onClick={this.onincrementHandler}>+</div>\r\n                <div className=\"counter-btn\" onClick={this.ondecrementHandler}>-</div>\r\n              </div>\r\n            )}\r\n          </React.Fragment>\r\n        )}\r\n        {this.state.isFinished && <div><b>Finished</b></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import logo from './logo.svg';\nimport Counter from './components/Counter'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Counter counter={10} displayBtn={true} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}